name: Release Firefox Extension

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Versión nueva (ej: 1.1)"
        required: true

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install web-ext and jq
        run: |
          npm install --global web-ext
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Determine version
        id: manifest
        run: |
          DEFAULT_VERSION=$(jq -r .version fextension/manifest.json)
          VERSION="${{ github.event.inputs.version }}"
          if [ -z "$VERSION" ]; then
            VERSION="$DEFAULT_VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build extension zip (optional)
        run: |
          mkdir -p build
          zip -r build/extension.zip fextension

      - name: Sync themes from options.js
        run: |
          # Ejecuta el script de sincronización que copia PREDEFINED_THEMES de options.js a background.js y al userscript
          node sync-themes.js

          # Si background.js o el userscript cambiaron, commitea y haz push para que la release incluya los temas sincronizados
          if ! git diff --quiet -- fextension/background.js MOOdle-Unizar-Personalizado.user.js; then
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git add fextension/background.js MOOdle-Unizar-Personalizado.user.js
            git commit -m "chore: sync PREDEFINED_THEMES from options.js"
            git push
          else
            echo "No changes after theme sync"
          fi

      - name: Sign extension on AMO (unlisted)
        run: |
          web-ext sign \
            --source-dir fextension \
            --artifacts-dir signed \
            --api-key ${{ secrets.AMO_JWT_ISSUER }} \
            --api-secret ${{ secrets.AMO_JWT_SECRET }} \
            --channel unlisted

      - name: Get signed XPI filename
        id: xpi
        run: echo "file=$(ls signed/*.xpi)" >> $GITHUB_OUTPUT

      - name: Update updates.json
        run: |
          XPI_URL="https://github.com/${{ github.repository }}/releases/download/${{ steps.manifest.outputs.version }}/$(basename ${{ steps.xpi.outputs.file }})"
          jq --arg ver "${{ steps.manifest.outputs.version }}" \
             --arg url "$XPI_URL" \
             '.addons["moodle-unizar-personalizado@carmoran"].updates = 
                [{version: $ver, update_link: $url}]' \
             updates.json > tmp.json && mv tmp.json updates.json

      - name: Commit updates.json
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add updates.json
          git commit -m "chore: update updates.json to version ${{ steps.manifest.outputs.version }}" || echo "No changes to commit"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.manifest.outputs.version }}
          files: |
            ${{ steps.xpi.outputs.file }}
            updates.json
